!function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){e.exports=function(){return new Worker(n.p+"4da952c879f2dd2fd231.worker.js")}},function(e,t,n){"use strict";n.r(t),n.d(t,"weightTraffic",function(){return g}),n.d(t,"weightLength",function(){return p}),n.d(t,"Hub",function(){return m});var i=n(0),s=n.n(i);const o=!1;let r={trafficWeight:"linear",distanceWeight:"square",nodeCount:30,packetSpawnChance:1/60,addRemoveNodes:!0,addRemoveChance:.01,packetOfDeath:!1,deadNodeTTL:600},a=new Map,l=0,h=null,d=null;function c(e){o&&console.log(e)}let f=function(){let e=0;return function(){return e+=1}}();function u(e){let t=null,n=0;for(let i of e)Math.random()<1/++n&&(t=i);return t}function g(e,t){switch(t){case"none":return 1;case"linear":return e;case"sqrt":return Math.sqrt(e);case"square":return Math.pow(e,2);case"exp":return Math.min(1e6,Math.exp(e/3));case"log":return Math.log(e)+1;case"bell":let n=e/3-2;return Math.max(.01,25*Math.exp(n-Math.pow(n,2)/2))}}function p(e,t){switch(t){case"linear":return Math.sqrt(e);case"sqrt":return 5*Math.pow(e,.25);case"square":return e/25;case"exp":return Math.min(1e6,Math.exp(Math.sqrt(e)/10)/3);case"log":return Math.max(1,25*(Math.log(e)/2+1))}}class w{constructor(e,t=!1){this.id=f(),this.target=e,this.isPOD=t,this.TAToB=null,this.TProgress=null,this.TSpeed=null}}class M{constructor(e,t){this.ends=[e,t],this._weight=1,this.inflight=new Set;let n=Math.abs(e.position[0]-t.position[0]),i=Math.abs(e.position[1]-t.position[1]);this._length=Math.pow(n,2)+Math.pow(i,2)}incrementWeight(){this.ends[0].isDead||this.ends[1].isDead||(this._weight+=1)}decrementWeight(){this._weight=.99*(this._weight-1)+1}traffic(){return g(this._weight,r.trafficWeight)}distance(){return p(this._length,r.distanceWeight)}cost(){return this.ends[0].isDead||this.ends[1].isDead?Number.MAX_VALUE:this.distance()/this.traffic()}receive(e,t){if(t!==this.ends[0]&&t!==this.ends[1])throw"Requested destination not available";c(`P${e.id} received by ${this.toString()}`),e.TAToB=t===this.ends[1],e.TProgress=0,e.TSpeed=.25*Math.sqrt(this.traffic()/this.distance()),this.inflight.add(e),this.incrementWeight()}step(){const e=new Set;for(let t of this.inflight){const n=t.TProgress+t.TSpeed;n<1?t.TProgress=n:e.add(t)}for(let t of e)this.inflight.delete(t),t.TAToB?(c(`${t.toString()} handed off to ${this.ends[1].toString()}`),this.ends[1].receive(t)):(c(`${t.toString()} handed off to ${this.ends[0].toString()}`),this.ends[0].receive(t));this.decrementWeight()}}class m{constructor(e,t){this.position=[e,t],this.id=f(),this.neighbors=new Map,this.isDead=!1}receive(e){if(e.isPOD&&(this.isDead=!0),e.target===this){if(!e.isPOD)return void c(`P${e.id} delivered to ${this.id}!`);{let t;do{t=u(h[0].values())}while(t.isDead||!a.has(t.id));e=new w(t,!0)}}if(0===this.neighbors.size)throw"No links";const t=d.get(a.get(e.target.id).get(this.id));let n=this.neighbors.get(t);void 0!==n&&n.receive(e,t)}}function v(e,t,n,i){function s(e,n){if(e.neighbors.has(n))return;const i=new M(e,n);t.push(i),e.neighbors.set(n,i),n.neighbors.set(e,i)}let o=Math.floor(Math.random()*n),r=Math.floor(Math.random()*i),a=new m(o,r);for(let t of e.values())s(t,a),s(a,t);e.set(a.id,a)}let b=function(){const e=new Map;return function(t){if(e.has(t))return e.get(t);{const n=`hsl(${function(e,t){return Math.ceil(e),Math.floor(t),Math.floor(Math.random()*(t-e))+e}(0,360)},100%,50%)`;return e.set(t,n),n}}}();function S(e,t,n,i){e.fillStyle="black",e.fillRect(0,0,i,n);const[s,o]=t;for(let t of o){let n=Math.min(6,(t.traffic()-1)/24),[i,s]=t.ends[0].position,[o,r]=t.ends[1].position;n>=1/255&&(t.ends[0].isDead||t.ends[1].isDead?e.strokeStyle="red":e.strokeStyle="white",e.lineWidth=n,e.beginPath(),e.moveTo(i,s),e.lineTo(o,r),e.stroke());const a=4;for(let n of t.inflight.keys()){e.fillStyle=b(n.target.id);const t=n.TAToB,l=n.TProgress;if(t){let t=(o-i)*l,n=(r-s)*l;e.fillRect(i+t-a/2,s+n-a/2,a,a)}else{let t=(i-o)*l,n=(s-r)*l;e.fillRect(o+t-a/2,r+n-a/2,a,a)}}}for(let t of s.values()){t.isDead?e.fillStyle="red":e.fillStyle="white";let[n,i]=t.position;e.fillRect(n-3.5,i-3.5,7,7)}}!function(){let e=new URLSearchParams(document.location.search);for(let t in r)if(e.has(t))try{r[t]=JSON.parse(e.get(t))}catch(n){r[t]=e.get(t)}else e.set(t,r[t].toString());history.replaceState(0,document.title,"?"+e.toString());const t=window.innerHeight,n=window.innerWidth,i=document.getElementById("canvas");i.height=t,i.width=n;const o=i.getContext("2d");h=function(e,t,n){const i=new Map,s=[];for(let o=0;o<e;o++)v(i,s,t,n);return[i,s]}(r.nodeCount,n,t);const[c,f]=h;d=c;let g=!1,p=!1;S(o,h,t,n);let M=[];function m(){if(0==l&&r.packetOfDeath){let e=!0;u(c.values()).receive(new w(u(c.values()),e))}S(o,h,t,n);for(let e=0;e<M.length;e++){let[t,n]=M[e];if(l-n>r.deadNodeTTL){M.splice(e,1),e-=1,c.delete(t.id);for(let[e,n]of t.neighbors){t.neighbors.delete(e),e.neighbors.delete(t);let i=f.indexOf(n);f.splice(i,1)}}}for(let e of f)e.step();for(let e of c.values())if(!e.isDead&&a.has(e.id)&&Math.random()<r.packetSpawnChance){let t;do{t=u(c.values())}while(t.isDead||!a.has(t.id));e.receive(new w(t))}if(r.addRemoveNodes){let e=(r.nodeCount-h[0].size)/r.nodeCount,i=Math.random(),s=r.addRemoveChance/2;if(i<s+s*e)v(h[0],h[1],n,t);else if(i<r.addRemoveChance){let e=u(c.values());e.isDead=!0,M.push([e,l])}}p&&(b.postMessage([c,null]),p=!1),window.requestAnimationFrame(m),l+=1}let b=new s.a;b.onmessage=function(e){a=e.data,p=!0,g||(g=!0,m())},b.postMessage([c,r])}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,